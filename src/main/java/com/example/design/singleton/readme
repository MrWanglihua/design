单例模式（Singleton Pattern）
定义：确保一个类在任何情况下都绝对只有一个实例，并提供一个全局访问点。
适用场景：应用也非常广泛。
分类：懒汉模式，饿汉模式
1、饿汉式单例
类加载的时候就立即初始化，并且创建单例对象。绝对线程安全，在线程还没出现以前就是实例化了，不可能存在访问安全问题。
优点：没有加任何的锁、执行效率比较高，在用户体验上来说，比懒汉式更好。
缺点：类加载的时候就初始化，不管用与不用都占着空间，浪费了内存
2、懒汉式单例
特点是：被外部类调用的时候内部类才会加载
优点：调用时再加载，节省内存空间
缺点：线程不安全

二、思考破坏单例模式的方式有哪些？
1、反射破坏单例
解决方案：其构造方法中做一些限制，一旦出现多次重复创建，则直接抛出异常。
2、序列化破坏单例
①、在类中增加 readResolve()方法
②：注册式单例：一种为容器缓存，一种为枚举登记